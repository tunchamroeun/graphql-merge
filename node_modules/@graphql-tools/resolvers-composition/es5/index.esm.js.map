{"version":3,"file":"index.esm.js","sources":["../../../dist-es5/resolvers-composition/src/chain-functions.js","../../../dist-es5/resolvers-composition/src/resolvers-composition.js"],"sourcesContent":["import { __read, __spread } from \"tslib\";\nexport function chainFunctions(funcs) {\n    if (funcs.length === 1) {\n        return funcs[0];\n    }\n    return funcs.reduce(function (a, b) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return a(b.apply(void 0, __spread(args)));\n    }; });\n}\n//# sourceMappingURL=chain-functions.js.map","import { __read, __spread } from \"tslib\";\nimport { chainFunctions } from './chain-functions';\nimport { get, set, flatten } from 'lodash';\nimport { isScalarType } from 'graphql';\nimport { asArray } from '@graphql-tools/utils';\nfunction resolveRelevantMappings(resolvers, path, allMappings) {\n    var splitted = path.split('.');\n    if (splitted.length === 2) {\n        var typeName_1 = splitted[0];\n        if (isScalarType(resolvers[typeName_1])) {\n            return [];\n        }\n        var fieldName_1 = splitted[1];\n        if (typeName_1 === '*') {\n            return flatten(Object.keys(resolvers).map(function (typeName) {\n                return resolveRelevantMappings(resolvers, typeName + \".\" + fieldName_1, allMappings);\n            }));\n        }\n        if (fieldName_1 === '*') {\n            return flatten(Object.keys(resolvers[typeName_1]).map(function (field) {\n                return resolveRelevantMappings(resolvers, typeName_1 + \".\" + field, allMappings);\n            })).filter(function (mapItem) { return !allMappings[mapItem]; });\n        }\n        else {\n            var paths = [];\n            if (resolvers[typeName_1] && resolvers[typeName_1][fieldName_1]) {\n                if (resolvers[typeName_1][fieldName_1].subscribe) {\n                    paths.push(path + '.subscribe');\n                }\n                if (resolvers[typeName_1][fieldName_1].resolve) {\n                    paths.push(path + '.resolve');\n                }\n                if (typeof resolvers[typeName_1][fieldName_1] === 'function') {\n                    paths.push(path);\n                }\n            }\n            return paths;\n        }\n    }\n    else if (splitted.length === 1) {\n        var typeName_2 = splitted[0];\n        return flatten(Object.keys(resolvers[typeName_2]).map(function (fieldName) {\n            return resolveRelevantMappings(resolvers, typeName_2 + \".\" + fieldName, allMappings);\n        }));\n    }\n    return [];\n}\n/**\n * Wraps the resolvers object with the resolvers composition objects.\n * Implemented as a simple and basic middleware mechanism.\n *\n * @param resolvers - resolvers object\n * @param mapping - resolvers composition mapping\n * @hidden\n */\nexport function composeResolvers(resolvers, mapping) {\n    if (mapping === void 0) { mapping = {}; }\n    var mappingResult = {};\n    Object.keys(mapping).map(function (resolverPath) {\n        if (mapping[resolverPath] instanceof Array || typeof mapping[resolverPath] === 'function') {\n            var composeFns_1 = mapping[resolverPath];\n            var relevantFields = resolveRelevantMappings(resolvers, resolverPath, mapping);\n            relevantFields.forEach(function (path) {\n                mappingResult[path] = asArray(composeFns_1);\n            });\n        }\n        else {\n            Object.keys(mapping[resolverPath]).forEach(function (fieldName) {\n                var composeFns = mapping[resolverPath][fieldName];\n                var relevantFields = resolveRelevantMappings(resolvers, resolverPath + '.' + fieldName, mapping);\n                relevantFields.forEach(function (path) {\n                    mappingResult[path] = asArray(composeFns);\n                });\n            });\n        }\n    });\n    Object.keys(mappingResult).forEach(function (path) {\n        var fns = chainFunctions(__spread(asArray(mappingResult[path]), [function () { return get(resolvers, path); }]));\n        set(resolvers, path, fns());\n    });\n    return resolvers;\n}\n//# sourceMappingURL=resolvers-composition.js.map"],"names":[],"mappings":"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"}